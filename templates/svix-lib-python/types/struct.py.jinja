import typing as t
from pydantic import Field
from datetime import datetime

from .common import SvixBaseModel

{% for c in referenced_components -%}
from . {{ c | to_snake_case }} import {{ c | to_upper_camel_case }}
{% endfor -%}

class {{ type.name | to_upper_camel_case }}(SvixBaseModel):
{%- for field in type.fields %}
    {%- if field.name != field.name | to_snake_case  %}
        {%- if field.required %}
            {%- set field_val -%} = Field(alias="{{ field.name }}"){%- endset %}
        {%- else %}
            {%- set field_val -%} = Field(default=None, alias="{{ field.name }}"){%- endset %}
        {%- endif %}
    {%- else %}
        {%- if field.required %}
            {%- set field_val = "" %}
        {%- else %}
            {%- set field_val = " = None" %}
        {%- endif %}
    {%- endif %}
    {%- if field.required %}
    {{ field.name | to_snake_case }}: {{ field.type.to_python() }}{{ field_val }}
    {%- else %}
    {{ field.name | to_snake_case }}: t.Optional[{{ field.type.to_python() }}]{{ field_val }}
    {%- endif %}
    {%- if field.description is defined %}
    {{ field.description | to_doc_comment(style="python") | indent(4) }}
    {%- endif %}
{% endfor %}
