{% set resource_type_name = resource.name | to_upper_camel_case -%}
// this file is @generated
package com.svix.kotlin

import okhttp3.Headers.Companion.headersOf
import com.svix.kotlin.MaybeUnset
import kotlinx.datetime.Instant
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonObject
{% for c in referenced_components -%}
import com.svix.kotlin.models.{{ c | to_upper_camel_case }}
{% endfor %}

{% for op in resource.operations -%}
    {% if op | has_query_or_header_params -%}
@Serializable
data class {{ resource_type_name }}{{ op.name | to_upper_camel_case }}Options(
        {% for p in op.query_params -%}
        {{ p.name | to_lower_camel_case }}
        {% endfor -%}
            {# {% set f_name = field.name | to_lower_camel_case -%}
            {% set f_type = field.type.to_kotlin() -%}
            {% set f_val = "" -%}
            {% set use_nullable = type.name is endingwith "Patch" and field.nullable -%}
            {% if use_nullable -%}
                {% set f_type %}MaybeUnset<{{ f_type }}>{% endset -%}
            {% endif -%}
            {% if not field.required and not use_nullable -%}
                {% set f_type %}{{ f_type }}?{% endset -%}
                {% set f_val = "= null" -%}
            {% endif -%}

            {% if field.name | to_lower_camel_case != field.name -%}
            @SerialName("{{ field.name }}")
            {% endif -%}
            val {{ field.name | to_lower_camel_case }}: {{ f_type }} {{ f_val }},
        {% endfor %} #}
)
    {% endif -%}
{% endfor -%}


{% for op in resource.operations -%}
{% set res_type = op.response_body_schema_name | replace("_", "") -%}
{% set has_query_params = op.query_params | length > 0 -%}
{% set has_required_query_params =
    op.query_params | selectattr("required") | length > 0 -%}
{% set has_header_params = op.header_params | length > 0 -%}
{{ op.description | with_javadoc_deprecation(op.deprecated) | to_doc_comment(style="kotlin") }}
{% if op.deprecated -%}
    @Deprecated
{% endif -%}
suspend fun {{ op.name | to_lower_camel_case }}(
    {# path parameters -#}
    {% for p in op.path_params -%}
        {{ p | to_lower_camel_case }}: String,
    {% endfor -%}

    {# body parameter interface -#}
    {% if op.request_body_schema_name is defined -%}
        {% set req_body_field_name = op.request_body_schema_name | to_lower_camel_case -%}
        {{ req_body_field_name }}: {{ op.request_body_schema_name }},
    {% endif -%}

    {# query parameters -#}
    {% if has_query_params -%}
        {% set field_ty -%}
            {{ resource_type_name }}{{ op.name | to_upper_camel_case }}Options
        {%- endset -%}
        options: {{ field_ty }}
        {%- if not has_required_query_params %} = {{ field_ty }}(){% endif -%}
        ,
    {% endif -%}

    {# PostOptions -#}
    {% if has_header_params -%}
        {# for now, only idempotency-key is supported in header params -#}
        options: PostOptions = PostOptions(),
    {% endif -%}
)
{%- if op.response_body_schema_name is defined -%}
    : {{ res_type }}
{%- endif %}
{
    {% set path_variable = op.path -%}
    {% if op.path_params | length > 0 -%}
        {% set path_variable = op.path | generate_kt_path_str(op.path_params) -%}
    {% endif -%}
    val url = this.newUrlBuilder()
        {# path params -#}
        .encodedPath("{{ path_variable }}")
        {# query params -#}
        {% for p in op.query_params -%}
        //.addQueryParameter("{{ p.name }}", "ops.{{p.name}}")
        {% endfor -%}
        .build()
    {% if op.header_params | length > 0 -%}
    val headers = headersOf(
        {%- for p in op.header_params -%}
        "{{ p.name }}" to options.{{ p.name | to_lower_camel_case }}
        {%- endfor -%}
    )
    {% endif -%}
    {% if op.request_body_schema_name is defined -%}
    val jsonBody = Json.encodeToString({{ req_body_field_name }})
    {% endif -%}
    {% set generic_res_type = res_type -%}
    {% if not op.response_body_schema_name is defined -%}
        {% set generic_res_type = "Boolean" -%}
    {% endif -%}
    val res = this.executeRequest<{{ generic_res_type }}>("{{ op.method | upper}}",url
    {%- if op.header_params | length > 0 -%}
    ,headers = headers
    {%- endif -%}
    {%- if op.request_body_schema_name is defined -%}
    ,jsonBody = jsonBody
    {%- endif -%}
    )

    return res!!

}

{% set extra_path -%}
api_extra/{{ resource.name | to_snake_case }}_{{ op.name | to_snake_case }}.kt
{%- endset -%}
{% include extra_path ignore missing %}
{% endfor -%}
