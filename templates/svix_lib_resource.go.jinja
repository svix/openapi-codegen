{% set resource_type_name = resource.name | to_upper_camel_case -%}
{% set api_type_name %}{{ resource_type_name }}Api{% endset -%}
// this file is @generated
package svix

import (
	"context"

	"github.com/svix/svix-webhooks/go/internal/openapi"
)

type {{ resource_type_name }} struct {
	api *openapi.APIClient
}

{% for op in resource.operations -%}
	{% if op.query_params | length > 0 -%}
	type {{ resource_type_name }}{{ op.name | to_upper_camel_case }}Options struct {
		{% for p in op.query_params -%}
			{{ p.description | to_doc_comment(style="go") }}
			{% set field_ty = p.type.to_go() -%}
			{% if not p.required %}{% set field_ty %}*{{ field_ty }}{% endset %}{% endif -%}
			{{ p.name | to_upper_camel_case }} {{ field_ty }}
		{% endfor -%}
	}

	{% endif -%}
{% endfor -%}

{% for op in resource.operations -%}
	{% set has_query_params = op.query_params | length > 0 -%}
	{% set has_required_query_params =
		op.query_params | selectattr("required") | length > 0 -%}
	{% set has_header_params = op.header_params | length > 0 -%}
	{% if op.response_body_schema_name is defined -%}
		{% set return_type -%}
			(*{{ op.response_body_schema_name | to_upper_camel_case }}, error)
		{%- endset -%}
	{% else -%}
		{% set response_type %}error{% endset -%}
	{% endif -%}
	{{ op.description | to_doc_comment(style="go") }}
	func (self *{{ resource_type_name }}) {{ op.name | to_upper_camel_case }}(
		{# path parameters -#}
		{% for p in op.path_params -%}
			{{ p | to_lower_camel_case }} string,
		{% endfor -%}

		{# body parameter interface -#}
		{% if op.request_body_schema_name is defined -%}
			{% set field_name = op.request_body_schema_name | to_lower_camel_case -%}
			{{ field_name }} *{{ op.request_body_schema_name }},
		{% endif -%}

		{# query parameters -#}
		{% if has_query_params -%}
			{% set field_ty -%}
				{{ resource_type_name }}{{ op.name | to_upper_camel_case }}Options
			{%- endset -%}
			{% if not has_required_query_params -%}
				{% set field_ty %}*{{ field_ty }}{% endset -%}
			{% endif -%}
			options {{ field_ty }},
		{% endif -%}

		{# PostOptions -#}
		{% if has_header_params -%}
			{# for now, only idempotency-key is supported in header params -#}
			options *PostOptions,
		{% endif -%}
	) {{ return_type }} {
		// TODO
	}{% if not loop.last %}{{ "\n" }}{% endif %}
{% endfor -%}

